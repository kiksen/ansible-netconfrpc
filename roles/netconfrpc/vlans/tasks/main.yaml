---
- name: parse vlans from device configuration
  set_fact: 
    current_vlans: "{{ current_configuration | extract_vlans }}"
- name: Vlans from device
  debug:
    msg: "{{ current_vlans }}"
  when: debug | bool == true

- name: Get vlan_ids which need to be added or changed
  set_fact:
    vlans_to_add: "{{ current_vlans | find_vlans_to_change(add_vlans) }}"

- name: Debug Vlans to add
  debug:
    msg: "{{ vlans_to_add }}"
  when: debug | bool == true

- name: Get vlan_ids which need to be removed
  set_fact:
    vlans_to_remove: "{{ current_vlans | find_vlans_to_remove(remove_vlans) }}"
  when: remove_vlans is defined


- name: Get vlan_ids to remove when replace is active
  set_fact:
    vlans_to_remove: "{{ current_vlans | find_vlans_to_remove_replace(add_vlans)}}"
  when:
    - replace is defined
    - replace | bool == true

- name: Build push_stack to add or change vlans
  vars:
    add_vlan_command: "vlan {{ item.vlan_id }}"
    add_vlan_name: "name {{ item.name }}"
  set_fact:
    push_stack: "{{ push_stack + [ add_vlan_command ] + [add_vlan_name] }}"
  loop: "{{ vlans_to_add }}"
 
- name: Build push_stack to remove vlans
  vars:
    remove_command: "no vlan {{ item }}"
  set_fact:
    push_stack: "{{ push_stack + [ remove_command ] }}"
  loop: "{{ vlans_to_remove }}"

- name: Debug push_stack
  debug:
    msg: "{{ push_stack }}"
  when: debug | bool == true

- name: Send vlan config to device
  when:
    - push_stack | length > 0
    - ansible_check_mode == False
  register: result_conf
  changed_when: true
  notify: write running configuration
  ansible.netcommon.netconf_rpc:
    rpc: edit-config
    content: |
      <target>
      <running/>
      </target>
        <config>
        <cli-config-data>
        {% for cmd in push_stack %}
        <cmd>{{ cmd }}</cmd>
        {% endfor %}
        </cli-config-data>
        </config>      


